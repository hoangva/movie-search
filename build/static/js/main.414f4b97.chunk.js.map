{"version":3,"sources":["components/Header.js","components/Movie.js","components/Search.js","components/App.js","components/NeedInclude.js","components/NeedUpload.js","components/WrongExtension.js","components/WrongName.js","components/WrongPath.js","serviceWorker.js","index.js"],"names":["Header","props","className","text","Movie","movie","poster","Poster","Title","width","alt","src","Year","Search","useState","searchValue","setSearchValue","value","onChange","e","target","type","onClick","preventDefault","search","App","loading","setLoading","movies","setMovies","errorMessage","setErrorMessage","useEffect","fetch","then","response","json","jsonResponse","Helmet","Response","Error","map","index","key","NeedInclude","NeedUpload","WrongExtension","WrongName","WrongPath","Boolean","window","location","hostname","match","routing","to","exact","path","component","ReactDOM","hydrate","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+OAUeA,G,KARA,SAACC,GACZ,OACI,4BAAQC,UAAU,cACd,4BAAKD,EAAME,SCoBRC,EAnBD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACPC,EACe,QAAjBD,EAAME,OALV,qGAKyDF,EAAME,OAC/D,OACI,yBAAKL,UAAU,SACX,4BAAKG,EAAMG,OACX,6BACI,yBACIC,MAAM,MACNC,IAAG,4BAAuBL,EAAMG,OAChCG,IAAKL,KAGb,+BAAKD,EAAMO,KAAX,OCaGC,EA7BA,SAACZ,GAAW,IAAD,EACgBa,mBAAS,IADzB,mBACfC,EADe,KACFC,EADE,KAiBtB,OACI,0BAAMd,UAAU,UACZ,2BACIe,MAAOF,EACPG,SAlBqB,SAACC,GAC9BH,EAAeG,EAAEC,OAAOH,QAkBhBI,KAAK,SAET,2BAAOC,QAbY,SAACH,GACxBA,EAAEI,iBACFtB,EAAMuB,OAAOT,GALbC,EAAe,KAgByBK,KAAK,SAASJ,MAAM,aC6DrDQ,EA7EH,WAAO,IAAD,EACgBX,oBAAS,GADzB,mBACPY,EADO,KACEC,EADF,OAEcb,mBAAS,IAFvB,mBAEPc,EAFO,KAECC,EAFD,OAG0Bf,mBAAS,MAHnC,mBAGPgB,EAHO,KAGOC,EAHP,KAKdC,qBAAU,WACNC,MATc,kDAUTC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFR,EAAUQ,EAAaxB,QACvBc,GAAW,QAEpB,IA8BH,OACI,oCACI,kBAACW,EAAA,OAAD,KACI,6CAEJ,yBAAKpC,UAAU,OACX,kBAAC,EAAD,CAAQC,KAAK,aACb,kBAAC,EAAD,CAAQqB,OAnCL,SAAAT,GACXY,GAAW,GACXI,EAAgB,MAEhBE,MAAM,8BAAD,OAA+BlB,EAA/B,6BACAmB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAC4B,SAA1BA,EAAaE,UACbV,EAAUQ,EAAaxB,QACvBc,GAAW,KAEXI,EAAgBM,EAAaG,OAC7Bb,GAAW,UAwBf,uBAAGzB,UAAU,aAAb,yCACA,yBAAKA,UAAU,UACVwB,IAAYI,EACT,4CACAA,EACA,yBAAK5B,UAAU,gBAAgB4B,GAEvBF,EAAOa,KAAI,SAACpC,EAAOqC,GAAR,OACP,kBAAC,EAAD,CAAOC,IAAG,UAAKD,EAAL,YAAcrC,EAAMG,OAASH,MAAOA,SAKtE,4BAAQM,IAA8B,qBACtC,4BAAQA,IAA8B,qBACtC,4BAAQA,IAA8B,qBACtC,4BAAQA,IAA8B,uBACtC,4BAAQA,IAA8B,uBACtC,4BAAQA,IAA8B,uBAEtC,yBAAKA,IAA8B,0BAA2BD,IAAI,KAClE,yBAAKC,IAA8B,2BAA4BD,IAAI,OCzDhEkC,EApBK,WAChB,OACI,oCACI,kBAACN,EAAA,OAAD,KACI,gDAEJ,yBAAKpC,UAAU,OACX,kBAAC,EAAD,CAAQC,KAAK,uBAEjB,yBAAKQ,IAA8B,0BAA2BD,IAAI,KAClE,4BAAQC,IAA8B,qBACtC,4BAAQA,IAA8B,qBACtC,4BAAQA,IAA8B,qBACtC,4BAAQA,IAA8B,uBACtC,4BAAQA,IAA8B,uBACtC,4BAAQA,IAA8B,yBCAnCkC,EAfI,WACf,OACI,oCACI,kBAACP,EAAA,OAAD,KACI,+CAEJ,yBAAKpC,UAAU,OACX,kBAAC,EAAD,CAAQC,KAAK,sBAEjB,yBAAKQ,IAA8B,0BAA2BD,IAAI,KAClE,yBAAKC,IAA8B,2BAA4BD,IAAI,OCKhEoC,EAfQ,WACnB,OACI,oCACI,kBAACR,EAAA,OAAD,KACI,mDAEJ,yBAAKpC,UAAU,OACX,kBAAC,EAAD,CAAQC,KAAK,0BAEjB,yBAAKQ,IAA8B,2BAA4BD,IAAI,KACnE,yBAAKC,IAA8B,2BAA4BD,IAAI,OCIhEqC,EAdG,WACd,OACI,oCACI,kBAACT,EAAA,OAAD,KACI,8CAEJ,yBAAKpC,UAAU,OACX,kBAAC,EAAD,CAAQC,KAAK,qBAEjB,yBAAKQ,IAAI,sCAAsCD,IAAI,OCOhDsC,EAhBG,WACd,OACI,oCACI,kBAACV,EAAA,OAAD,KACI,8CAEJ,yBAAKpC,UAAU,OACX,kBAAC,EAAD,CAAQC,KAAK,qBAEjB,yBAAKQ,IAA8B,0BAA2BD,IAAI,KAPtE,IAQI,yBAAKC,IAA8B,yBAA0BD,IAAI,KARrE,IASI,yBAAKC,IAA8B,uBAAwBD,IAAI,KATnE,M,cCKYuC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCDN,IAAMC,EACF,kBAAC,IAAD,KACI,6BACI,4BACI,4BACI,kBAAC,IAAD,CAAMC,GAAG,SAAT,SAEJ,4BACI,kBAAC,IAAD,CAAMA,GAAG,sBAAT,iBAEJ,4BACI,kBAAC,IAAD,CAAMA,GAAG,qBAAT,gBAEJ,4BACI,kBAAC,IAAD,CAAMA,GAAG,oBAAT,eAEJ,4BACI,kBAAC,IAAD,CAAMA,GAAG,oBAAT,eAEJ,4BACI,kBAAC,IAAD,CAAMA,GAAG,yBAAT,qBAGR,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWjC,IACjC,kBAAC,IAAD,CAAO+B,OAAK,EAACC,KAAK,qBAAqBC,UAAWd,IAClD,kBAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,oBAAoBC,UAAWb,IACjD,kBAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,mBAAmBC,UAAWX,IAChD,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,mBAAmBC,UAAWV,IAChD,kBAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,wBAAwBC,UAAWZ,MAKjEa,IAASC,QAAQN,EAASO,SAASC,eAAe,SD+E5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/B,MAAK,SAAAgC,GACjCA,EAAaC,iB","file":"static/js/main.414f4b97.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = (props) => {\n    return (\n        <header className=\"App-header\">\n            <h2>{props.text}</h2>\n        </header>\n    );\n};\n\nexport default Header;","import React from \"react\";\n\nconst DEFAULT_PLACEHOLDER_IMAGE =\n    \"https://m.media-amazon.com/images/M/MV5BMTczNTI2ODUwOF5BMl5BanBnXkFtZTcwMTU0NTIzMw@@._V1_SX300.jpg\";\n\n\nconst Movie = ({ movie }) => {\n    const poster =\n        movie.Poster === \"N/A\" ? DEFAULT_PLACEHOLDER_IMAGE : movie.Poster;\n    return (\n        <div className=\"movie\">\n            <h2>{movie.Title}</h2>\n            <div>\n                <img\n                    width=\"200\"\n                    alt={`The movie titled: ${movie.Title}`}\n                    src={poster}\n                />\n            </div>\n            <p>({movie.Year})</p>\n        </div>\n    );\n};\n\n\nexport default Movie;","import React, { useState } from \"react\";\n\n\nconst Search = (props) => {\n    const [searchValue, setSearchValue] = useState(\"\");\n\n    const handleSearchInputChanges = (e) => {\n        setSearchValue(e.target.value);\n    }\n\n    const resetInputField = () => {\n        setSearchValue(\"\")\n    }\n\n    const callSearchFunction = (e) => {\n        e.preventDefault();\n        props.search(searchValue);\n        resetInputField();\n    }\n\n    return (\n        <form className=\"search\">\n            <input\n                value={searchValue}\n                onChange={handleSearchInputChanges}\n                type=\"text\"\n            />\n            <input onClick={callSearchFunction} type=\"submit\" value=\"SEARCH\" />\n        </form>\n    );\n}\n\nexport default Search;","import React, { useState, useEffect } from \"react\";\nimport { Helmet } from 'react-helmet'\nimport \"../App.css\";\nimport Header from \"./Header\";\nimport Movie from \"./Movie\";\nimport Search from \"./Search\";\n\n\nconst MOVIE_API_URL = \"https://www.omdbapi.com/?s=man&apikey=c20e5c15\";\n\n\nconst App = () => {\n    const [loading, setLoading] = useState(true);\n    const [movies, setMovies] = useState([]);\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    useEffect(() => {\n        fetch(MOVIE_API_URL)\n            .then(response => response.json())\n            .then(jsonResponse => {\n                setMovies(jsonResponse.Search);\n                setLoading(false);\n            });\n    }, []);\n\n    const search = searchValue => {\n        setLoading(true);\n        setErrorMessage(null);\n\n        fetch(`https://www.omdbapi.com/?s=${searchValue}&page=10&apikey=c20e5c15`)\n            .then(response => response.json())\n            .then(jsonResponse => {\n                if (jsonResponse.Response === \"True\") {\n                    setMovies(jsonResponse.Search);\n                    setLoading(false);\n                } else {\n                    setErrorMessage(jsonResponse.Error);\n                    setLoading(false);\n                }\n            });\n    };\n\n\n    const componentDidMount = () => {\n        console.log('ahihii');\n        // const script = document.createElement(\"script\");\n        // script.src = \"/static/libs/a1.js\";\n        // script.async = true;\n        // script.onload = () => this.scriptLoaded();\n\n        // document.body.appendChild(script);\n    }\n\n    return (\n        <>\n            <Helmet>\n                <title>Main Page</title>\n            </Helmet>\n            <div className=\"App\">\n                <Header text=\"My Movie\" />\n                <Search search={search} />\n                <p className=\"App-intro\">Sharing a few of our favourite movies</p>\n                <div className=\"movies\">\n                    {loading && !errorMessage ? (\n                        <span>loading...</span>\n                    ) : errorMessage ? (\n                        <div className=\"errorMessage\">{errorMessage}</div>\n                    ) : (\n                                movies.map((movie, index) => (\n                                    <Movie key={`${index}-${movie.Title}`} movie={movie} />\n                                ))\n                            )}\n                </div>\n            </div>\n            <script src={process.env.PUBLIC_URL + '/assets/js/a1.js'}></script>\n            <script src={process.env.PUBLIC_URL + '/assets/js/a2.js'}></script>\n            <script src={process.env.PUBLIC_URL + '/assets/js/a3.js'}></script>\n            <script src={process.env.PUBLIC_URL + '/assets/css/a1.css'}></script>\n            <script src={process.env.PUBLIC_URL + '/assets/css/a2.css'}></script>\n            <script src={process.env.PUBLIC_URL + '/assets/css/a3.css'}></script>\n\n            <img src={process.env.PUBLIC_URL + '/assets/images/img1.png'} alt=\"\"/>\n            <img src={process.env.PUBLIC_URL + '/wrongpath/sth/error.png'} alt=\"\"/>\n        </>\n    );\n};\n\n\nexport default App;","import React, { useState, useEffect } from \"react\";\nimport { Helmet } from 'react-helmet'\nimport \"../App.css\";\nimport Header from \"./Header\";\n\nconst NeedInclude = () => {\n    return (\n        <>\n            <Helmet>\n                <title>Need Include</title>\n            </Helmet>\n            <div className=\"App\">\n                <Header text=\"Test Need Include\" />\n            </div>\n            <img src={process.env.PUBLIC_URL + '/assets/images/img1.png'} alt=\"\"/>\n            <script src={process.env.PUBLIC_URL + '/assets/js/a1.js'}></script>\n            <script src={process.env.PUBLIC_URL + '/assets/js/a2.js'}></script>\n            <script src={process.env.PUBLIC_URL + '/assets/js/a3.js'}></script>\n            <script src={process.env.PUBLIC_URL + '/assets/css/a1.css'}></script>\n            <script src={process.env.PUBLIC_URL + '/assets/css/a2.css'}></script>\n            <script src={process.env.PUBLIC_URL + '/assets/css/a3.css'}></script>\n        </>\n    )\n}\n\nexport default NeedInclude;","import React, { useState, useEffect } from \"react\";\nimport { Helmet } from 'react-helmet'\nimport \"../App.css\";\nimport Header from \"./Header\";\n\nconst NeedUpload = () => {\n    return (\n        <>\n            <Helmet>\n                <title>Need Upload</title>\n            </Helmet>\n            <div className=\"App\">\n                <Header text=\"Test Need Upload\" />\n            </div>\n            <img src={process.env.PUBLIC_URL + '/assets/images/img1.png'} alt=\"\"/>\n            <img src={process.env.PUBLIC_URL + '/wrongpath/sth/error.png'} alt=\"\"/>\n        </>\n    )\n}\n\nexport default NeedUpload;","import React, { useState, useEffect } from \"react\";\nimport { Helmet } from 'react-helmet'\nimport \"../App.css\";\nimport Header from \"./Header\";\n\nconst WrongExtension = () => {\n    return (\n        <>\n            <Helmet>\n                <title>Wrong Extension</title>\n            </Helmet>\n            <div className=\"App\">\n                <Header text=\"Test Wrong Extension\" />\n            </div>\n            <img src={process.env.PUBLIC_URL + '/assets/images/img1.jpeg'} alt=\"\" />\n            <img src={process.env.PUBLIC_URL + '/wrongpath/sth/error.png'} alt=\"\"/>\n        </>\n    )\n}\n\nexport default WrongExtension;","import React, { useState, useEffect } from \"react\";\nimport { Helmet } from 'react-helmet'\nimport \"../App.css\";\nimport Header from \"./Header\";\n\nconst WrongName = () => {\n    return (\n        <>\n            <Helmet>\n                <title>Wrong Name</title>\n            </Helmet>\n            <div className=\"App\">\n                <Header text=\"Test Wrong Name\" />\n            </div>\n            <img src=\"./wrongname/wrongname/wrongname.png\" alt=\"\"></img>\n        </>\n    )\n}\n\nexport default WrongName;","import React, { useState, useEffect } from \"react\";\nimport { Helmet } from 'react-helmet'\nimport \"../App.css\";\nimport Header from \"./Header\";\n\nconst WrongPath = () => {\n    return (\n        <>\n            <Helmet>\n                <title>Wrong Path</title>\n            </Helmet>\n            <div className=\"App\">\n                <Header text=\"Test Wrong Path\" />\n            </div>\n            <img src={process.env.PUBLIC_URL + '/assets/images/img1.png'} alt=\"\" />;\n            <img src={process.env.PUBLIC_URL + '/assets/imagu/img1.png'} alt=\"\" />;\n            <img src={process.env.PUBLIC_URL + '/assets/ima/img1.png'} alt=\"\" />;\n        </>\n    )\n}\n\nexport default WrongPath;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport NeedInclude from './components/NeedInclude';\nimport NeedUpload from './components/NeedUpload';\nimport WrongExtension from './components/WrongExtension';\nimport WrongName from './components/WrongName';\nimport WrongPath from './components/WrongPath';\n\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link,\n} from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\n\nconst routing = (\n    <Router>\n        <div>\n            <ul>\n                <li>\n                    <Link to=\"/page\">Home</Link>\n                </li>\n                <li>\n                    <Link to=\"/page/need-include\">Need Include</Link>\n                </li>\n                <li>\n                    <Link to=\"/page/need-upload\">Need Upload</Link>\n                </li>\n                <li>\n                    <Link to=\"/page/wrong-name\">Wrong Name</Link>\n                </li>\n                <li>\n                    <Link to=\"/page/wrong-path\">Wrong Path</Link>\n                </li>\n                <li>\n                    <Link to=\"/page/wrong-extension\">Wrong Extension</Link>\n                </li>\n            </ul>\n            <Route exact path=\"/\" component={App} />\n            <Route exact path=\"/page/need-include\" component={NeedInclude} />\n            <Route exact path=\"/page/need-upload\" component={NeedUpload} />\n            <Route exact path=\"/page/wrong-name\" component={WrongName} />\n            <Route exact path=\"/page/wrong-path\" component={WrongPath} />\n            <Route exact path=\"/page/wrong-extension\" component={WrongExtension} />\n        </div>\n    </Router>\n)\n\nReactDOM.hydrate(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}